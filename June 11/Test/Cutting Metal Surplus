3. Cutting Metal Surplus
The owner of a metal rod factory has a surplus of rods of arbitrary lengths. A local contractor offers to buy any of the factory's surplus as long as all the rods have the same exact integer length, referred to as saleLength. The factory owner can increase the number of sellable rods by cutting each rod zero or more times, but each cut has a cost denoted by costPerCut. After all cuts have been made, any leftover rods having a length other than saleLength must be discarded for no profit. The factory owner's total profit for the sale is calculated as:

 

totalProfit = totalUniformRods × saleLength × salePrice − totalCuts × costPerCut

 

where totalUniformRods is the number of sellable rods, salePrice is the per unit length price that the contractor agrees to pay, and totalCuts is the total number of times the rods needed to be cut.

 

For example, the owner has three rods, lengths = [30, 59, 110]. The costPerCut = 1 and the salePrice = 10 per unit length. The following are tests based on lengths that are factors of 30, the length of the shortest bar. Factors of other lengths might also be tested, but this will demonstrate the methodology.

			Cuts
		---------------------
Length 	Rod	Extra 	Regular Total 	Pieces 	
----------------------------------------------
30	30	0	0	0	1
	59	1	0	1	1
	110	1	2	3	3
	Revenue = (10*5*30)-(4*1) = 1496
15	30	0	1	1	2
	59	1	2	3	3
	110	1	6	7	7
	Revenue = (10*12*15)-(11*1) = 1789
10	30	0	2	2	3
	59	1	4	5	5
	110	0	10	10	11
	Revenue = (10*19*10)-(17*1) = 1883
6	30	0	4	4	5
	59	1	8	9	9
	110	1	17	18	18
	Revenue = (10*32*6)-(31*1) = 1889
5	30	0	5	5	6
	59	1	10	11	11
	110	0	21	21	21
	Revenue = (10*39*5)-(37*1) = 1913
3	30	0	9	9	10
	59	1	18	19	19
	110	1	35	36	36
	Revenue = (10*65*3)-(64*1) = 1886
Working through the first stanza, Length = 30, it's the same length as the first rod, so no cuts required and there is 1 piece. The second rod, cut and discard the excess 29 unit rod. No more cuts are necessary and have another 1 piece to sell. Cut 20 units off the 110 unit rod to discard leaving 90 units, then make two more cuts to have 3 more pieces to sell. Finally sell 5 totalUniformRods , saleLength = 30 at salePrice = 10 per unit length for 1500. The cost to produce was totalCuts = 4 times costPerCut = 1 per cut, or 4. Total revenue = 1500-4=1496. The maximum revenue among these tests is obtained at length 5: 1913.

 

Function Description 

Complete the function maxProfit in the editor below. The function must return an integer that denotes the maximum possible profit.

 

maxProfit has the following parameter(s):

    costPerCut:  integer cost to make a cut

    salePrice:  integer per unit length sales price

    lengths[lengths[0],...lengths[n-1]]:  an array of integer rod lengths

 

Constraints

1 ≤ n ≤ 50
1 ≤ lengths[i] ≤ 104
1 ≤ salePrice, costPerCut ≤ 1000
 

Input Format for Custom Testing
Input from stdin will be processed as follows and passed to the function.

 

The first line contains an integer, costPerCut.

The second line contains an integer, salePrice.

The next line contains an integer n, the size of the array lengths.

Each of the next n lines contains an integer lengths[i] where 0 ≤ i < n.

 

Sample Case 0
Sample Input 0

1
10
3
26
103
59
 

Sample Output 0

1770
 

Explanation 0

Since costPerCut = 1 is very inexpensive, a large number of cuts can be made to reduce the number of wasted pieces. The optimal rod length for maximizing profit is 6, and the rods are cut like this:

lengths[0] = 26: Cut off a piece of length 2 and discard it, resulting in a rod of length 24. Then cut this rod into 4 pieces of length 6.
lengths[1] = 103: Cut off a piece of length 1 and discard it, resulting in a rod of length 102. Then cut this rod into 17 pieces of length 6.
lengths[2] = 59: Cut off a piece of length 5 and discard it, resulting in a rod of length 54. Then cut this rod into 9 pieces of length 6.
 

After performing totalCuts = (1 + 3) + (1 + 16) + (1 + 8) = 30 cuts, there are totalUniformRods = 4 + 17 + 9 = 30 pieces of length saleLength = 6 that can be sold at salePrice = 10. This yields a total profit of salePrice × totalUniformRods × saleLength − totalCuts × costPerCut = 10 × 30 × 6 − 30 × 1 = 1770.

 

Sample Case 1
Sample Input 1

100
10
3
26
103
59
 

Sample Output 1

1230
 

Explanation 1

Since costPerCut = 100, cuts are expensive and must be minimal. The optimal rod length for maximizing profit is 51, and the rods are cut like this:

lengths[0] = 26: Discard this rod entirely.
lengths[1] = 103: Cut off a piece of length 1 and discard it, resulting in a rod of length 102. Then cut this rod into 2 pieces of length 51.
lengths[2] = 59: Cut off a piece of length 8 and discard it, resulting in a rod of length 51.
 

After performing totalCuts = (0) + (1 + 1) + (1) = 3 cuts, there are totalUniformRods = 0 + 2 + 1 = 3 pieces of length saleLength = 51 that can be sold at salePrice = 10 each. This yields a total profit of salePrice × totalUniformRods × saleLength − totalCuts × costPerCut = 10 × 3 × 51 − 3 × 100 = 1230.

 
